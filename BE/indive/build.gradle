plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'jacoco'
}

jacoco {
	toolVersion = '0.8.8'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

allprojects {
	repositories {
		mavenCentral()
		maven { url 'https://jitpack.io' }
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation group: 'com.auth0', name: 'java-jwt', version: '3.16.0'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// ipfs
	implementation 'com.github.ipfs:java-ipfs-http-client:v1.3.3'

	// 스웨거 의존성
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

// 자동 생성된 Q클래스 gradle clean으로 제거
clean {
	delete file('src/main/generated')
}

tasks.named('test') {
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacoco.exec")
		includes = ["*.domain.*"]
		excludes = ["*.domain.*.dto.*",
					"*.domain.*.exception.*",
					"*.domain.*.Q*"]
	}

	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		html.enabled true
		xml.enabled false
		csv.enabled false
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					include: 'com/ssafy/indive/domain/**',
					exclude: ['com/ssafy/indive/domain/**/dto/**',
							  'com/ssafy/indive/domain/**/exception/**',
							  'com/ssafy/indive/domain/**/entity/Q*'])
		}))
	}
}